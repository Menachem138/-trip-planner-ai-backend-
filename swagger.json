{
  "swagger": "2.0",
  "info": {
    "title": "Trip Planner AI API",
    "version": "1.0.0",
    "description": "API documentation for the Trip Planner AI application"
  },
  "basePath": "/api",
  "paths": {
    "/user/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Create a new user account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate a user and return a JWT token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/trip": {
      "post": {
        "summary": "Create a new trip",
        "description": "Create a new trip for the authenticated user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trip"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Trip created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/trip/{id}": {
      "get": {
        "summary": "Get trip details",
        "description": "Retrieve details of a specific trip",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip details retrieved successfully"
          },
          "404": {
            "description": "Trip not found"
          }
        }
      },
      "put": {
        "summary": "Update trip details",
        "description": "Update details of a specific trip",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trip"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trip updated successfully"
          },
          "404": {
            "description": "Trip not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a trip",
        "description": "Delete a specific trip",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Trip deleted successfully"
          },
          "404": {
            "description": "Trip not found"
          }
        }
      }
    },
    "/trip/{id}/recommendations": {
      "post": {
        "summary": "Get activity recommendations",
        "description": "Get activity recommendations for a specific trip based on user preferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecommendationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recommendations retrieved successfully"
          },
          "404": {
            "description": "Trip not found"
          }
        }
      }
    },
    "/optimize": {
      "post": {
        "summary": "Optimize route",
        "description": "Optimize a travel route using the Google Maps Directions API",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "origin": {
                  "type": "string"
                },
                "destination": {
                  "type": "string"
                },
                "waypoints": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Route optimized successfully"
          },
          "500": {
            "description": "Error optimizing route"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Trip": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "activities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RecommendationsRequest": {
      "type": "object",
      "properties": {
        "userPreferences": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
